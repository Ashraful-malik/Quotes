{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ashraful/Desktop/reactJs/Project/quotes/src/Contact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport classnames from \"classnames\";\nimport database from \"./Firebase.js\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport firebase from \"firebase\";\n\nfunction Contact() {\n  _s();\n\n  var _errors$name, _errors$message;\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({});\n\n  const handleForm = () => {\n    database.collection(\"contact\").add({\n      name: name,\n      email: email,\n      message: message,\n      Date: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(ec => {\n      alert(\"message send successful\");\n      console.log(ec);\n    }).catch(e => {\n      alert(e);\n    });\n    setName(\"\");\n    setEmail(\"\");\n    setMessage(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-5 \",\n      style: {\n        margin: \"0 auto\",\n        width: \"80%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card  shadow p-3 mb-5 bg-white rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body \",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center text-primary\",\n            style: {\n              fontFamily: \"sans-serif\"\n            },\n            children: \"Contact Us\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: handleSubmit(handleForm),\n            style: {\n              marginTop: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"FullName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"name\",\n              type: \"name\",\n              placeholder: \"name\",\n              value: name,\n              autoCorrect: \"\",\n              className: classnames(\"form-control\", {\n                \"is-invalid\": errors.name\n              }),\n              onChange: e => {\n                setName(e.target.value);\n              },\n              ref: register({\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), ((_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \" This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: email,\n              placeholder: \"Email\",\n              name: \"email\",\n              className: classnames(\"form-control\", {\n                \"is-invalid\": errors.email\n              }),\n              onChange: e => {\n                setEmail(e.target.value);\n              },\n              ref: register({\n                required: \"This field is required\",\n                pattern: {\n                  value: /^(([^<>()\\\\.,;:\\s@\"]+(\\.[^<>()\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                  message: \"please enter valid email\"\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: [\" \", errors.email.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"message\",\n              className: classnames(\"form-control\", {\n                \"is-invalid\": errors.message\n              }),\n              value: message,\n              rows: \"2\",\n              onChange: e => {\n                setMessage(e.target.value);\n              },\n              ref: register({\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), ((_errors$message = errors.message) === null || _errors$message === void 0 ? void 0 : _errors$message.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \" This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit \",\n              className: \"submit-btn \",\n              children: [\"send\", /*#__PURE__*/_jsxDEV(SendIcon, {\n                style: {\n                  marginLeft: \"5px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Contact, \"pAb6Q8MUzfXwhub2JpfZdAhcKcI=\", false, function () {\n  return [useForm];\n});\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/home/ashraful/Desktop/reactJs/Project/quotes/src/Contact.jsx"],"names":["React","useState","useForm","classnames","database","SendIcon","firebase","Contact","name","setName","email","setEmail","message","setMessage","register","handleSubmit","errors","handleForm","collection","add","Date","firestore","FieldValue","serverTimestamp","then","ec","alert","console","log","catch","e","margin","width","fontFamily","marginTop","target","value","required","type","pattern","marginLeft"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AACA,SAASC,OAAT,GAAmB;AAAA;;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAEa,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCd,OAAO,CAAC,EAAD,CAAlD;;AAEA,QAAMe,UAAU,GAAG,MAAM;AACvBb,IAAAA,QAAQ,CACLc,UADH,CACc,SADd,EAEGC,GAFH,CAEO;AACHX,MAAAA,IAAI,EAAEA,IADH;AAEHE,MAAAA,KAAK,EAAEA,KAFJ;AAGHE,MAAAA,OAAO,EAAEA,OAHN;AAIHQ,MAAAA,IAAI,EAAEd,QAAQ,CAACe,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B;AAJH,KAFP,EAQGC,IARH,CAQSC,EAAD,IAAQ;AACZC,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACD,KAXH,EAYGI,KAZH,CAYUC,CAAD,IAAO;AACZJ,MAAAA,KAAK,CAACI,CAAD,CAAL;AACD,KAdH;AAeArB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAnBD;;AAoBA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAAEkB,QAAAA,MAAM,EAAE,QAAV;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OAAlC;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,wCADZ;AAAA,+BAIE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,0BADZ;AAEE,YAAA,KAAK,EAAE;AAAEC,cAAAA,UAAU,EAAE;AAAd,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AACE,YAAA,SAAS,EAAC,MADZ;AAEE,YAAA,QAAQ,EAAElB,YAAY,CAACE,UAAD,CAFxB;AAGE,YAAA,KAAK,EAAE;AAAEiB,cAAAA,SAAS,EAAE;AAAb,aAHT;AAAA,oCAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,WAAW,EAAC,MAHd;AAIE,cAAA,KAAK,EAAE1B,IAJT;AAKE,cAAA,WAAW,EAAE,EALf;AAME,cAAA,SAAS,EAAEL,UAAU,CAAC,cAAD,EAAiB;AACpC,8BAAca,MAAM,CAACR;AADe,eAAjB,CANvB;AASE,cAAA,QAAQ,EAAGsB,CAAD,IAAO;AACfrB,gBAAAA,OAAO,CAACqB,CAAC,CAACK,MAAF,CAASC,KAAV,CAAP;AACD,eAXH;AAYE,cAAA,GAAG,EAAEtB,QAAQ,CAAC;AACZuB,gBAAAA,QAAQ,EAAE;AADE,eAAD;AAZf;AAAA;AAAA;AAAA;AAAA,oBAPF,EAuBG,iBAAArB,MAAM,CAACR,IAAP,8DAAa8B,IAAb,MAAsB,UAAtB,iBACC;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxBJ,eA0BE;AAAA;AAAA;AAAA;AAAA,oBA1BF,eA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA3BF,eA4BE;AAAA;AAAA;AAAA;AAAA,oBA5BF,eA6BE;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,KAAK,EAAE5B,KAFT;AAGE,cAAA,WAAW,EAAC,OAHd;AAIE,cAAA,IAAI,EAAC,OAJP;AAKE,cAAA,SAAS,EAAEP,UAAU,CAAC,cAAD,EAAiB;AACpC,8BAAca,MAAM,CAACN;AADe,eAAjB,CALvB;AAQE,cAAA,QAAQ,EAAGoB,CAAD,IAAO;AACfnB,gBAAAA,QAAQ,CAACmB,CAAC,CAACK,MAAF,CAASC,KAAV,CAAR;AACD,eAVH;AAWE,cAAA,GAAG,EAAEtB,QAAQ,CAAC;AACZuB,gBAAAA,QAAQ,EAAE,wBADE;AAEZE,gBAAAA,OAAO,EAAE;AACPH,kBAAAA,KAAK,EAAE,+IADA;AAEPxB,kBAAAA,OAAO,EAAE;AAFF;AAFG,eAAD;AAXf;AAAA;AAAA;AAAA;AAAA,oBA7BF,EAgDGI,MAAM,CAACN,KAAP,iBACC;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,8BAAoCM,MAAM,CAACN,KAAP,CAAaE,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjDJ,eAmDE;AAAA;AAAA;AAAA;AAAA,oBAnDF,eAoDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApDF,eAqDE;AAAA;AAAA;AAAA;AAAA,oBArDF,eAsDE;AACE,cAAA,IAAI,EAAC,SADP;AAEE,cAAA,SAAS,EAAET,UAAU,CAAC,cAAD,EAAiB;AACpC,8BAAca,MAAM,CAACJ;AADe,eAAjB,CAFvB;AAKE,cAAA,KAAK,EAAEA,OALT;AAME,cAAA,IAAI,EAAC,GANP;AAOE,cAAA,QAAQ,EAAGkB,CAAD,IAAO;AACfjB,gBAAAA,UAAU,CAACiB,CAAC,CAACK,MAAF,CAASC,KAAV,CAAV;AACD,eATH;AAUE,cAAA,GAAG,EAAEtB,QAAQ,CAAC;AACZuB,gBAAAA,QAAQ,EAAE;AADE,eAAD;AAVf;AAAA;AAAA;AAAA;AAAA,oBAtDF,EAoEG,oBAAArB,MAAM,CAACJ,OAAP,oEAAgB0B,IAAhB,MAAyB,UAAzB,iBACC;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArEJ,eAuEE;AAAA;AAAA;AAAA;AAAA,oBAvEF,eAwEE;AAAQ,cAAA,IAAI,EAAC,SAAb;AAAuB,cAAA,SAAS,EAAC,aAAjC;AAAA,8CAEE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAE;AAAEE,kBAAAA,UAAU,EAAE;AAAd;AAAjB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxEF,eA4EE;AAAA;AAAA;AAAA;AAAA,oBA5EF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiGD;;GA3HQjC,O;UAIoCL,O;;;KAJpCK,O;AA4HT,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport classnames from \"classnames\";\nimport database from \"./Firebase.js\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport firebase from \"firebase\";\nfunction Contact() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const { register, handleSubmit, errors } = useForm({});\n\n  const handleForm = () => {\n    database\n      .collection(\"contact\")\n      .add({\n        name: name,\n        email: email,\n        message: message,\n        Date: firebase.firestore.FieldValue.serverTimestamp(),\n      })\n      .then((ec) => {\n        alert(\"message send successful\");\n        console.log(ec);\n      })\n      .catch((e) => {\n        alert(e);\n      });\n    setName(\"\");\n    setEmail(\"\");\n    setMessage(\"\");\n  };\n  return (\n    <>\n      <div className=\"col-md-5 \" style={{ margin: \"0 auto\", width: \"80%\" }}>\n        <div\n          className=\"card \n          shadow p-3 mb-5 bg-white rounded\"\n        >\n          <div className=\"card-body \">\n            <h1\n              className=\"text-center text-primary\"\n              style={{ fontFamily: \"sans-serif\" }}\n            >\n              Contact Us\n            </h1>\n            <form\n              className=\"form\"\n              onSubmit={handleSubmit(handleForm)}\n              style={{ marginTop: \"10px\" }}\n            >\n              <label>FullName</label>\n              <br />\n              <input\n                name=\"name\"\n                type=\"name\"\n                placeholder=\"name\"\n                value={name}\n                autoCorrect={\"\"}\n                className={classnames(\"form-control\", {\n                  \"is-invalid\": errors.name,\n                })}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                ref={register({\n                  required: true,\n                })}\n              />\n              {errors.name?.type === \"required\" && (\n                <div className=\"invalid-feedback\"> This field is required</div>\n              )}\n              <br />\n              <label>Email</label>\n              <br />\n              <input\n                type=\"email\"\n                value={email}\n                placeholder=\"Email\"\n                name=\"email\"\n                className={classnames(\"form-control\", {\n                  \"is-invalid\": errors.email,\n                })}\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n                ref={register({\n                  required: \"This field is required\",\n                  pattern: {\n                    value: /^(([^<>()\\\\.,;:\\s@\"]+(\\.[^<>()\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                    message: \"please enter valid email\",\n                  },\n                })}\n              />\n              {errors.email && (\n                <div className=\"invalid-feedback\"> {errors.email.message}</div>\n              )}\n              <br />\n              <label>message</label>\n              <br />\n              <textarea\n                name=\"message\"\n                className={classnames(\"form-control\", {\n                  \"is-invalid\": errors.message,\n                })}\n                value={message}\n                rows=\"2\"\n                onChange={(e) => {\n                  setMessage(e.target.value);\n                }}\n                ref={register({\n                  required: true,\n                })}\n              ></textarea>\n              {errors.message?.type === \"required\" && (\n                <div className=\"invalid-feedback\"> This field is required</div>\n              )}\n              <br />\n              <button type=\"submit \" className=\"submit-btn \">\n                send\n                <SendIcon style={{ marginLeft: \"5px\" }} />\n              </button>\n              <br />\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}